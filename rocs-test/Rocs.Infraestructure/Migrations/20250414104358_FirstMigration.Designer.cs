// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rocs.Infraestructure;

#nullable disable

namespace Rocs.Infraestructure.Migrations
{
    [DbContext(typeof(RocsContext))]
    [Migration("20250414104358_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivityWorker", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId", "WorkerId");

                    b.HasIndex("WorkerId");

                    b.ToTable("ActivityWorker", (string)null);

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            WorkerId = 1
                        },
                        new
                        {
                            ActivityId = 2,
                            WorkerId = 1
                        },
                        new
                        {
                            ActivityId = 3,
                            WorkerId = 1
                        },
                        new
                        {
                            ActivityId = 3,
                            WorkerId = 2
                        },
                        new
                        {
                            ActivityId = 3,
                            WorkerId = 3
                        },
                        new
                        {
                            ActivityId = 3,
                            WorkerId = 4
                        },
                        new
                        {
                            ActivityId = 3,
                            WorkerId = 5
                        },
                        new
                        {
                            ActivityId = 3,
                            WorkerId = 6
                        },
                        new
                        {
                            ActivityId = 4,
                            WorkerId = 1
                        },
                        new
                        {
                            ActivityId = 4,
                            WorkerId = 2
                        },
                        new
                        {
                            ActivityId = 4,
                            WorkerId = 3
                        },
                        new
                        {
                            ActivityId = 4,
                            WorkerId = 4
                        },
                        new
                        {
                            ActivityId = 4,
                            WorkerId = 5
                        },
                        new
                        {
                            ActivityId = 4,
                            WorkerId = 6
                        },
                        new
                        {
                            ActivityId = 5,
                            WorkerId = 1
                        },
                        new
                        {
                            ActivityId = 5,
                            WorkerId = 2
                        },
                        new
                        {
                            ActivityId = 5,
                            WorkerId = 3
                        },
                        new
                        {
                            ActivityId = 5,
                            WorkerId = 4
                        },
                        new
                        {
                            ActivityId = 5,
                            WorkerId = 5
                        },
                        new
                        {
                            ActivityId = 5,
                            WorkerId = 6
                        },
                        new
                        {
                            ActivityId = 6,
                            WorkerId = 2
                        },
                        new
                        {
                            ActivityId = 7,
                            WorkerId = 2
                        },
                        new
                        {
                            ActivityId = 8,
                            WorkerId = 2
                        },
                        new
                        {
                            ActivityId = 8,
                            WorkerId = 6
                        });
                });

            modelBuilder.Entity("Rocs.DTO.WorkerActivity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalHours")
                        .HasColumnType("int");

                    b.Property<int>("TotalHoursNext7Days")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Rocs.Domain.Entities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeID");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Activity", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2025, 4, 13, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Build component 1",
                            StartDate = new DateTime(2025, 4, 13, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2025, 4, 13, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Build component 2",
                            StartDate = new DateTime(2025, 4, 13, 19, 1, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2025, 4, 14, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Build machine 1",
                            StartDate = new DateTime(2025, 4, 14, 6, 10, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            EndDate = new DateTime(2025, 4, 14, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Build machine 2",
                            StartDate = new DateTime(2025, 4, 14, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            EndDate = new DateTime(2025, 4, 21, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Build machine 3",
                            StartDate = new DateTime(2025, 4, 20, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            EndDate = new DateTime(2025, 4, 19, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Build component 3",
                            StartDate = new DateTime(2025, 4, 19, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            EndDate = new DateTime(2025, 4, 19, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Build component 4",
                            StartDate = new DateTime(2025, 4, 19, 19, 10, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 1
                        },
                        new
                        {
                            Id = 8,
                            EndDate = new DateTime(2025, 4, 21, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Build machine 4",
                            StartDate = new DateTime(2025, 4, 21, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            TypeId = 2
                        });
                });

            modelBuilder.Entity("Rocs.Domain.Entities.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("LimitWorkers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RestHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActivityType", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LimitWorkers = 1,
                            Name = "Build Component",
                            RestHours = 2
                        },
                        new
                        {
                            Id = 2,
                            LimitWorkers = 999,
                            Name = "Build Machine",
                            RestHours = 4
                        });
                });

            modelBuilder.Entity("Rocs.Domain.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Worker", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C"
                        },
                        new
                        {
                            Id = 4,
                            Name = "D"
                        },
                        new
                        {
                            Id = 5,
                            Name = "E"
                        },
                        new
                        {
                            Id = 6,
                            Name = "F"
                        });
                });

            modelBuilder.Entity("ActivityWorker", b =>
                {
                    b.HasOne("Rocs.Domain.Entities.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ActivityWorker_Activity");

                    b.HasOne("Rocs.Domain.Entities.Worker", null)
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ActivityWorker_Worker");
                });

            modelBuilder.Entity("Rocs.Domain.Entities.Activity", b =>
                {
                    b.HasOne("Rocs.Domain.Entities.ActivityType", "Type")
                        .WithMany("Activities")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Activity_ActivityType");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Rocs.Domain.Entities.ActivityType", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
